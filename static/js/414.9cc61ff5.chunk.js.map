{"version":3,"file":"static/js/414.9cc61ff5.chunk.js","mappings":"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","sources":["webpack://social-network/./src/Components/Wrapper/Main/Messenger/Messenger.module.css?43b8","webpack://social-network/./src/Components/Wrapper/Main/Messenger/Dialogs/Dialogs.module.css?c02f","webpack://social-network/./src/Components/Wrapper/Main/Messenger/Dialogs/Dialog/Dialog.module.css?eb4d","Components/Wrapper/Main/Messenger/Dialogs/Dialog/Dialog.jsx","Components/Wrapper/Main/Messenger/Dialogs/Dialogs.jsx","Components/Wrapper/Main/Messenger/Dialogs/DialogsContainer.jsx","webpack://social-network/./src/Components/Wrapper/Main/Messenger/Messages/Messages.module.css?ec18","webpack://social-network/./src/Components/Wrapper/Main/Messenger/Messages/Message/Message.module.css?3eca","Components/Wrapper/Main/Messenger/Messages/Message/Message.jsx","Components/Wrapper/Main/Messenger/Messages/Messages.jsx","Components/Wrapper/Main/Messenger/Messages/MessagesContainer.jsx","Components/Wrapper/Main/Messenger/Messenger.jsx","Components/Wrapper/Main/Messenger/MessengerContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messenger\":\"Messenger_messenger__DxRHt\",\"wrapper\":\"Messenger_wrapper__YPN9I\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7++Jd\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__8q+mr\",\"avatar\":\"Dialog_avatar__gr49t\",\"active\":\"Dialog_active__Vj82R\"};","import React from 'react';\r\nimport styles from './Dialog.module.css';\r\nimport Avatar from '../../../../../Avatar/Avatar';\r\n\r\nconst Dialog = (props) => {\r\n  return (\r\n    <div\r\n      className={\r\n        props.isActive ? `${styles.dialog} ${styles.active}` : styles.dialog\r\n      }\r\n    >\r\n      <div className={styles.avatar}>\r\n        <Avatar />{' '}\r\n      </div>\r\n      <p>{props.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport Dialog from './Dialog/Dialog';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\n\r\nconst Dialogs = (props) => {\r\n  const params = useParams();\r\n  const dialogId = params['*'];\r\n  const dialogsElements = props.dialogsData.map((userData) => (\r\n    <NavLink to={`/dialogs/${userData.id}`}>\r\n      <Dialog name={userData.name} isActive={dialogId === userData.id} />\r\n    </NavLink>\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <input type=\"text\" placeholder=\"Search\" />\r\n      {dialogsElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dialogs from './Dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.messengerPage.usersData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {};\r\n};\r\n\r\nconst DialogContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__WFB-z\",\"wrapper\":\"Messages_wrapper__-gSNN\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__L49Vv\",\"my\":\"Message_my__8ezpY\"};","import React from 'react';\r\nimport styles from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div\r\n      className={\r\n        props.isMyMessage ? `${styles.message} ${styles.my}` : styles.message\r\n      }\r\n    >\r\n      {props.message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styles from './Messages.module.css';\r\nimport Message from './Message/Message';\r\nimport SvgSelector from '../../../../SvgSelector/SvgSelector';\r\n\r\nconst Messages = (props) => {\r\n  const messagesElements = props.messagesData.map((messageData) => (\r\n    <Message\r\n      message={messageData.message}\r\n      isMyMessage={messageData.isMyMessage}\r\n    />\r\n  ));\r\n\r\n  const newMessage = React.createRef();\r\n\r\n  const onAddMessage = () => {\r\n    props.addMessage();\r\n  };\r\n\r\n  const onMessageChange = () => {\r\n    const text = newMessage.current.value;\r\n    props.updateNewMessageText(text);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.messages}>{messagesElements}</div>\r\n      <input\r\n        value={props.newMessageText}\r\n        onChange={onMessageChange}\r\n        ref={newMessage}\r\n        name=\"text\"\r\n        placeholder=\"Write a message...\"\r\n      />\r\n      <button onClick={onAddMessage}>\r\n        <SvgSelector id={'send'} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addMessage,\r\n  updateNewMessageText,\r\n} from '../../../../../Redux/messenger-reducer';\r\nimport Messages from './Messages';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    messagesData: state.messengerPage.messagesData,\r\n    newMessageText: state.messengerPage.newMessageText,\r\n  };\r\n};\r\n\r\nconst MessagesContainer = connect(mapStateToProps, {\r\n  addMessage,\r\n  updateNewMessageText,\r\n})(Messages);\r\nexport default MessagesContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './Messenger.module.css';\r\nimport DialogsContainer from './Dialogs/DialogsContainer';\r\nimport MessagesContainer from './Messages/MessagesContainer';\r\nimport { Route, Routes, useParams } from 'react-router';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Messenger = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const params = useParams();\r\n  const dialogId = params['*'];\r\n  const isWideScreen = width >= 480;\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWidth(window.innerWidth);\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === 'Escape') {\r\n        console.log('redirect');\r\n        navigate('/dialogs');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.messenger}>\r\n      {isWideScreen ? (\r\n        <>\r\n          <div className={styles.wrapper}>\r\n            <Routes>\r\n              <Route path={':id'} element={<MessagesContainer />} />\r\n            </Routes>\r\n          </div>\r\n          <DialogsContainer />\r\n        </>\r\n      ) : dialogId ? (\r\n        <div className={styles.wrapper}>\r\n          <Routes>\r\n            <Route path={':id'} element={<MessagesContainer />} />\r\n          </Routes>\r\n        </div>\r\n      ) : (\r\n        <DialogsContainer />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messenger;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../../../hoc/withAuthRedirect';\r\nimport Messenger from './Messenger';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(Messenger);\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","_jsxs","className","isActive","concat","styles","children","_jsx","Avatar","name","dialogId","useParams","dialogsElements","dialogsData","map","userData","NavLink","to","id","Dialog","type","placeholder","connect","state","messengerPage","usersData","Dialogs","isMyMessage","message","messagesElements","messagesData","messageData","Message","newMessage","React","value","newMessageText","onChange","text","current","updateNewMessageText","ref","onClick","addMessage","SvgSelector","Messages","_useState","useState","window","innerWidth","_useState2","_slicedToArray","width","setWidth","isWideScreen","navigate","useNavigate","useEffect","handleResize","handleKeyDown","event","key","console","log","addEventListener","document","removeEventListener","_Fragment","Routes","Route","path","element","MessagesContainer","DialogsContainer","compose","withAuthRedirect","Messenger","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","this","_objectSpread","Navigate"],"sourceRoot":""}